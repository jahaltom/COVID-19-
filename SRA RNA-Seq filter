import pandas as pd
from pysradb import sraweb
import json
import subprocess
import os


ids=open("sampleid",'r')
##Make a list to store metadata
metadata=[]
##Load SRA database
db = sraweb.SRAweb()
for i in ids:
    outfile=open("json_temp",'w')
    cmd=('efetch -db sra -id ' + i + ' -format native -json').replace("\n", "")
    result = subprocess.Popen(cmd, shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
    out,err = result.communicate()
    out=out.decode("utf-8")
    outfile.write(out+'\n')
    outfile.close()
    with open('json_temp') as json_file:
       data = json.load(json_file)
       ##Prints SRP
       #print(data['EXPERIMENT_PACKAGE_SET']['EXPERIMENT_PACKAGE']['STUDY']['accession'])
       ##study title
       title = (data['EXPERIMENT_PACKAGE_SET']['EXPERIMENT_PACKAGE']['STUDY']['DESCRIPTOR']['STUDY_TITLE'])
       ##study abstract
       abstract = (data['EXPERIMENT_PACKAGE_SET']['EXPERIMENT_PACKAGE']['STUDY']['DESCRIPTOR']['STUDY_ABSTRACT'])
       try:
           ##LIBRARY_CONSTRUCTION_PROTOCOL
           lib_info = (data['EXPERIMENT_PACKAGE_SET']['EXPERIMENT_PACKAGE']['EXPERIMENT']['DESIGN']['LIBRARY_DESCRIPTOR']['LIBRARY_CONSTRUCTION_PROTOCOL'])
       except:
            print(i+"has no Lib Info")
            os.remove("json_temp")
            continue
       if "Chromium" in lib_info or "Single Cell" in lib_info:
            print(i+"is single cell")
            os.remove("json_temp")
            continue

       else:
             #Retrieve metadata
             df = db.sra_metadata(i)
             try:
                 if df['library_layout'].str.contains('PAIRED').any():
                        df.insert(len(df.columns),"Title",[title],True)
                        df.insert(len(df.columns),"Abstract",[abstract],True)
                        df.insert(len(df.columns),"LIBRARY_CONSTRUCTION_PROTOCOL",[lib_info],True)
                        metadata.append(df)
             except:
                print(i+"no layout ")
             os.remove("json_temp")

result = pd.concat(metadata)
result.to_csv("srr.metadata")
